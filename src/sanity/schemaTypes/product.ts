import { defineType, defineField } from 'sanity';

export default defineType({
  name: 'product',
  title: 'Product',
  type: 'document',
  fields: [
    defineField({
      name: 'id',
      title: 'ID',
      type: 'string',
      description: 'Unique identifier for the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'name',
      title: 'Name',
      type: 'string',
      description: 'Name of the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'description',
      title: 'Description',
      type: 'text',
      description: 'Detailed description of the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'price',
      title: 'Price',
      type: 'number',
      description: 'Current price of the product.',
      validation: (Rule) => Rule.required().positive(),
    }),
    defineField({
      name: 'originalPrice',
      title: 'Original Price',
      type: 'number',
      description: 'Original price of the product before discount.',
      validation: (Rule) => Rule.required().positive(),
    }),
    defineField({
      name: 'discount',
      title: 'Discount',
      type: 'number',
      description: 'Discount percentage applied to the product.',
      validation: (Rule) => Rule.required().min(0).max(100),
    }),
    defineField({
      name: 'category',
      title: 'Category',
      type: 'string',
      description: 'Category of the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'tags',
      title: 'Tags',
      type: 'array',
      of: [{ type: 'string' }],
      description: 'Tags associated with the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'mainImage',
      title: 'Main Image',
      type: 'image',
      description: 'Main image of the product.',
      options: {
        hotspot: true, // Enables image cropping
      },
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'color',
      title: 'Color',
      type: 'array',
      of: [{ type: 'string' }],
      description: 'Available colors for the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'sizes',
      title: 'Sizes',
      type: 'array',
      of: [{ type: 'string' }],
      description: 'Available sizes for the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'stock',
      title: 'Stock',
      type: 'number',
      description: 'Number of items in stock.',
      validation: (Rule) => Rule.required().integer().min(0),
    }),
    defineField({
      name: 'dimensions',
      title: 'Dimensions',
      type: 'object',
      fields: [
        defineField({
          name: 'width',
          title: 'Width',
          type: 'string',
          description: 'Width of the product.',
          validation: (Rule) => Rule.required(),
        }),
        defineField({
          name: 'height',
          title: 'Height',
          type: 'string',
          description: 'Height of the product.',
          validation: (Rule) => Rule.required(),
        }),
        defineField({
          name: 'depth',
          title: 'Depth',
          type: 'string',
          description: 'Depth of the product.',
          validation: (Rule) => Rule.required(),
        }),
        defineField({
          name: 'weight',
          title: 'Weight',
          type: 'string',
          description: 'Weight of the product.',
          validation: (Rule) => Rule.required(),
        }),
        defineField({
          name: 'seatHeight',
          title: 'Seat Height',
          type: 'string',
          description: 'Height of the seat.',
          validation: (Rule) => Rule.required(),
        }),
        defineField({
          name: 'legHeight',
          title: 'Leg Height',
          type: 'string',
          description: 'Height of the legs.',
          validation: (Rule) => Rule.required(),
        }),
      ],
      description: 'Dimensions of the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'material',
      title: 'Material',
      type: 'string',
      description: 'Primary material used in the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'secondaryMaterial',
      title: 'Secondary Material',
      type: 'string',
      description: 'Secondary material used in the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'configuration',
      title: 'Configuration',
      type: 'string',
      description: 'Configuration or design of the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'upholsteryMaterial',
      title: 'Upholstery Material',
      type: 'string',
      description: 'Material used for upholstery.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'upholsteryColor',
      title: 'Upholstery Color',
      type: 'string',
      description: 'Color of the upholstery.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'fillingMaterial',
      title: 'Filling Material',
      type: 'string',
      description: 'Material used for filling.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'finishType',
      title: 'Finish Type',
      type: 'string',
      description: 'Type of finish applied to the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'originOfManufacture',
      title: 'Origin of Manufacture',
      type: 'string',
      description: 'Country or region where the product is manufactured.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'warranty',
      title: 'Warranty',
      type: 'object',
      fields: [
        defineField({
          name: 'summary',
          title: 'Summary',
          type: 'string',
          description: 'Summary of the warranty.',
          validation: (Rule) => Rule.required(),
        }),
        defineField({
          name: 'serviceType',
          title: 'Service Type',
          type: 'string',
          description: 'Type of service provided under warranty.',
          validation: (Rule) => Rule.required(),
        }),
        defineField({
          name: 'covered',
          title: 'Covered',
          type: 'string',
          description: 'What is covered under warranty.',
          validation: (Rule) => Rule.required(),
        }),
        defineField({
          name: 'notCovered',
          title: 'Not Covered',
          type: 'string',
          description: 'What is not covered under warranty.',
          validation: (Rule) => Rule.required(),
        }),
        defineField({
          name: 'domesticWarranty',
          title: 'Domestic Warranty',
          type: 'string',
          description: 'Duration of the domestic warranty.',
          validation: (Rule) => Rule.required(),
        }),
      ],
      description: 'Warranty details for the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'rating',
      title: 'Rating',
      type: 'object',
      fields: [
        defineField({
          name: 'average',
          title: 'Average',
          type: 'number',
          description: 'Average rating of the product.',
          validation: (Rule) => Rule.required().min(0).max(5),
        }),
        defineField({
          name: 'breakdown',
          title: 'Breakdown',
          type: 'object',
          fields: [
            defineField({
              name: 'fiveStars',
              title: 'Five Stars',
              type: 'number',
              description: 'Number of five-star ratings.',
              validation: (Rule) => Rule.required().min(0),
            }),
            defineField({
              name: 'fourStars',
              title: 'Four Stars',
              type: 'number',
              description: 'Number of four-star ratings.',
              validation: (Rule) => Rule.required().min(0),
            }),
            defineField({
              name: 'threeStars',
              title: 'Three Stars',
              type: 'number',
              description: 'Number of three-star ratings.',
              validation: (Rule) => Rule.required().min(0),
            }),
            defineField({
              name: 'twoStars',
              title: 'Two Stars',
              type: 'number',
              description: 'Number of two-star ratings.',
              validation: (Rule) => Rule.required().min(0),
            }),
            defineField({
              name: 'oneStar',
              title: 'One Star',
              type: 'number',
              description: 'Number of one-star ratings.',
              validation: (Rule) => Rule.required().min(0),
            }),
          ],
          description: 'Breakdown of ratings by star count.',
          validation: (Rule) => Rule.required(),
        }),
      ],
      description: 'Rating details for the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'salesPackage',
      title: 'Sales Package',
      type: 'string',
      description: 'What is included in the sales package.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'modelNumber',
      title: 'Model Number',
      type: 'string',
      description: 'Model number of the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'sku',
      title: 'SKU',
      type: 'string',
      description: 'Stock Keeping Unit (SKU) of the product.',
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: 'features',
      title: 'Features',
      type: 'array',
      of: [{ type: 'string' }],
      description: 'List of features of the product.',
      validation: (Rule) => Rule.required(),
    }),
  ],
});
